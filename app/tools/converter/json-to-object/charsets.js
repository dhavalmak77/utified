export const CHARSETS = {
	armscii8: 'ArmSCII-8',
	ascii: 'ASCII',
	base64: 'base64',
	Big5: 'Big5',
	'Big5-HKSCS': 'Big5-HKSCS',
	binary: 'BINARY',
	cesu8: 'CESU-8',
	'CP - Code Page': {
		cp1046: 'CP-1046',
		cp1124: 'CP-1124',
		cp1125: 'CP-1125',
		cp1129: 'CP-1129',
		cp1133: 'CP-1133',
		cp1161: 'CP-1161',
		cp1162: 'CP-1162',
		cp1163: 'CP-1163',
		cp1250: 'CP-1250',
		cp1251: 'CP-1251',
		cp1252: 'CP-1252',
		cp1253: 'CP-1253',
		cp1254: 'CP-1254',
		cp1255: 'CP-1255',
		cp1256: 'CP-1256',
		cp1257: 'CP-1257',
		cp1258: 'CP-1258',
		cp437: 'CP-437',
		cp720: 'CP-720',
		cp737: 'CP-737',
		cp775: 'CP-775',
		cp808: 'CP-808',
		cp850: 'CP-850',
		cp852: 'CP-852',
		cp855: 'CP-855',
		cp856: 'CP-856',
		cp857: 'CP-857',
		cp858: 'CP-858',
		cp860: 'CP-860',
		cp861: 'CP-861',
		cp862: 'CP-862',
		cp863: 'CP-863',
		cp864: 'CP-864',
		cp865: 'CP-865',
		cp866: 'CP-866',
		cp869: 'CP-869',
		cp874: 'CP-874',
		cp922: 'CP-922',
	},
	'EUC - Extended Unix Code': {
		'EUC-CN': 'EUC-CN',
		'EUC-JP': 'EUC-JP',
		'EUC-KR': 'EUC-KR',
	},
	GB18030: 'GB-18030',
	GB2312: 'GB-2312',
	GBK: 'GBK',
	georgianacademy: 'GeorgianAcademy',
	georgianps: 'GeorgianPS',
	hex: 'HEX',
	hproman8: 'HP-Roman-8',
	IBM: {
		ibm1046: 'IBM-1046',
		ibm1124: 'IBM-1124',
		ibm1125: 'IBM-1125',
		ibm1129: 'IBM-1129',
		ibm1133: 'IBM-1133',
		ibm1161: 'IBM-1161',
		ibm1162: 'IBM-1162',
		ibm1163: 'IBM-1163',
		ibm437: 'IBM-437',
		// ibm720: "IBM-720",
		ibm737: 'IBM-737',
		ibm775: 'IBM-775',
		ibm808: 'IBM-808',
		ibm850: 'IBM-850',
		ibm852: 'IBM-852',
		ibm855: 'IBM-855',
		ibm856: 'IBM-856',
		ibm857: 'IBM-857',
		ibm858: 'IBM-858',
		ibm860: 'IBM-860',
		ibm861: 'IBM-861',
		ibm862: 'IBM-862',
		ibm863: 'IBM-863',
		ibm864: 'IBM-864',
		ibm865: 'IBM-865',
		ibm866: 'IBM-866',
		ibm869: 'IBM-869',
		ibm922: 'IBM-922',
	},
	ISO: {
		'ISO-8859-1': 'ISO-8859-1',
		'ISO-8859-10': 'ISO-8859-10',
		'ISO-8859-11': 'ISO-8859-11',
		// "ISO-8859-12": "ISO-8859-12",
		'ISO-8859-13': 'ISO-8859-13',
		'ISO-8859-14': 'ISO-8859-14',
		'ISO-8859-15': 'ISO-8859-15',
		'ISO-8859-16': 'ISO-8859-16',
		'ISO-8859-2': 'ISO-8859-2',
		'ISO-8859-3': 'ISO-8859-3',
		'ISO-8859-4': 'ISO-8859-4',
		'ISO-8859-5': 'ISO-8859-5',
		'ISO-8859-6': 'ISO-8859-6',
		'ISO-8859-7': 'ISO-8859-7',
		'ISO-8859-8': 'ISO-8859-8',
		'ISO-8859-9': 'ISO-8859-9',
		iso646cn: 'ISO-646-CN',
		iso646jp: 'ISO-646-JP',
	},
	KOI8: {
		'koi8-r': 'KOI8-R',
		'koi8-ru': 'KOI8-RU',
		'koi8-t': 'KOI8-T',
		'koi8-u': 'KOI8-U',
	},
	KS_C_5601: 'KS_C_5601',
	Mac: {
		maccenteuro: 'MacCentralEurope',
		maccroatian: 'MacCroatian',
		maccyrillic: 'MacCyrillic',
		macgreek: 'MacGreek',
		maciceland: 'MacIceland',
		macintosh: 'Macintosh',
		macroman: 'MacRoman',
		macromania: 'MacRomania',
		macthai: 'MacThai',
		macturkish: 'MacTurkish',
		macukraine: 'MacUkraine',
	},
	pt154: 'PT154',
	rk1048: 'RK-1048',
	Shift_JIS: 'Shift-JIS',
	tcvn: 'TCVN',
	tis620: 'TIS-620',
	'UCS - Universal Coded Character Set': {
		'UCS-4': 'UCS-4',
		'UCS-4BE': 'UCS-4BE',
		'UCS-4LE': 'UCS-4LE',
		ucs2: 'UCS-2',
	},
	'UTF - Unicode Transformation Format': {
		'UTF-16': 'UTF-16',
		'UTF-16BE': 'UTF-16BE',
		'UTF-32': 'UTF-32',
		'UTF-32BE': 'UTF-32BE',
		'UTF-32LE': 'UTF-32LE',
		utf16le: 'UTF-16LE',
		UTF7: 'UTF-7',
		'UTF7-IMAP': 'UTF-7-IMAP',
		utf8: 'UTF-8',
	},
	viscii: 'VISCII',
	Windows: {
		'Windows-31j': 'Windows-31J',
		windows1250: 'Windows-1250',
		windows1251: 'Windows-1251',
		windows1252: 'Windows-1252',
		windows1253: 'Windows-1253',
		windows1254: 'Windows-1254',
		windows1255: 'Windows-1255',
		windows1256: 'Windows-1256',
		windows1257: 'Windows-1257',
		windows1258: 'Windows-1258',
		windows874: 'Windows-874',
		Windows932: 'Windows-932',
		Windows936: 'Windows-936',
		Windows949: 'Windows-949',
		Windows950: 'Windows-950',
	},
};

export const CHARSET_OPTIONS = Object.entries(CHARSETS).map(([key, value]) => {
	if (typeof value === 'object') {
		const group = Object.entries(value).map(([optionKey, optionValue]) => ({
			label: optionValue,
			value: optionKey,
		}));

		return {
			group: key,
			items: group
		};
	}

	return {
		label: value,
		value: key,
	};
});